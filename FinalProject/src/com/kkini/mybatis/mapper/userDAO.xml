<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org/DTD Mapper 3.0/EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kkini.mybatis.IUserDAO">

<select id="getChalist" resultType="java.util.HashMap">
SELECT CHA_TYPE_CODE , CHA
FROM CHA_TYPE
ORDER BY 1
</select>



<select id="getTalklist" resultType="java.util.HashMap">
SELECT TALK_AMOUNT_CODE AS CODE , AMOUNT
FROM TALK_AMOUNT
ORDER BY 1
</select>


<select id="getIntlist" resultType="java.util.HashMap">
SELECT INTER_TYPE_CODE AS CODE, INTER
FROM INTER_TYPE
ORDER BY 1
</select>


<select id="getSpeedlist" resultType="java.util.HashMap">
SELECT U_SPEED_CODE AS CODE, U_SPEED
FROM EATINGSPEED
ORDER BY 1
</select>


<select id="userRegister" parameterType="com.kkini.dto.UserDTO" statementType="CALLABLE">
{CALL PRC_USER_REGISTE(
#{user_id, mode=IN, jdbcType=VARCHAR}
, #{user_pw, mode=IN, jdbcType=VARCHAR}
, #{user_nickname, mode=IN, jdbcType=VARCHAR}
, #{user_phonenumber, mode=IN, jdbcType=VARCHAR}
, #{user_addr, mode=IN, jdbcType=VARCHAR}
, #{user_talk, mode=IN, jdbcType=VARCHAR}
, #{user_eatSpeed, mode=IN, jdbcType=VARCHAR}
, #{user_birth , mode=IN, jdbcType=CHAR}
, #{user_gender, mode=IN, jdbcType=CHAR}
, #{user_introduce, mode=IN, jdbcType=NULL}
, #{user_code_live, mode=OUT, jdbcType=VARCHAR}
)}
</select>


<select id="region_InOut" parameterType="com.kkini.dto.UserDTO" statementType="CALLABLE">
{CALL PRC_INSERTREGION(
 #{region_name, mode=IN, jdbcType=VARCHAR}
,#{region_code, mode=OUT, jdbcType=VARCHAR} 
)}
</select>



<select id="regionSearch" parameterType="java.lang.String" resultType="java.lang.String">
SELECT REGION_CODE
FROM REGION
WHERE REGION_NAME LIKE #{user_addr}
</select>


<select id="check" resultType="java.lang.Integer" parameterType="java.lang.String">
SELECT COUNT(*) AS COUNT
FROM REGION
WHERE REGION_NAME LIKE #{region_name}

</select>




<insert id="addintregion" parameterType="java.lang.String">
INSERT INTO U_ATTENTION(U_ATTENTION_CODE,REGION_CODE,U_CODE)
VALUES('UAC'||LPAD(SEQ_U_ATTENTION_CODE.NEXTVAL,7,'0'),(SELECT REGION_CODE FROM REGION WHERE REGION_NAME=#{user_region}),#{user_code})
</insert>

<insert id="addinterest" parameterType="java.lang.String">
INSERT INTO INTEREST(INTER_CODE, INTER_TYPE_CODE, U_CODE)
VALUES('IC'||LPAD(SEQ_INTEREST_CODE.NEXTVAL,8,'0'),#{user_interest},#{user_code})
</insert>

<insert id="addcharacter" parameterType="java.lang.String">
INSERT INTO CHARACTER(CHA_CTG_CODE, CHA_TYPE_CODE, U_CODE)
VALUES('CHA'||LPAD(SEQ_CHARACTER_CODE.NEXTVAL,7,'0'),#{user_character},#{user_code})
</insert>


<select id="loginMember" parameterType="com.kkini.dto.UserDTO" resultType="com.kkini.dto.UserDTO">
SELECT U_CODE AS user_code , U_NICKNAME AS user_nickname
FROM U_PRIVATE_DATA
WHERE U_ID=#{user_id} AND #{user_pw}=cryptpack.DECRYPT( U_PW,#{user_pw})
</select>



<!-- 아이디 중복검사  -->
<select id="idOverlapCheck" parameterType="java.lang.String" resultType="java.lang.Integer">

SELECT COUNT(*) AS COUNT
FROM U_PRIVATE_DATA
WHERE U_ID = #{id}

</select>


<!-- 닉네임 중복검사 -->
<select id="nickNameOverlapCheck" parameterType="java.lang.String" resultType="java.lang.Integer">
SELECT COUNT(*) AS COUNT
FROM U_PRIVATE_DATA
WHERE U_NICKNAME = #{nickname}
</select>



<!-- 점수 가져오기 -->
<select id="getScore" parameterType="java.lang.String" resultType="com.kkini.dto.UserDTO">

SELECT NVL(AC.ATTEND,5) AS attendScore, NVL(MBC.MANNER,5) AS mannerScore, NVL(MBC.BIAS,5) AS biasScore
FROM U_ATTEND_SCORE AC JOIN U_MANNER_BIAS_SCORE MBC
ON AC.USERCODE = MBC.USERCODE
RIGHT JOIN U_PRIVATE_DATA UPD
ON MBC.USERCODE = UPD.U_CODE
WHERE UPD.U_CODE = #{user_code}

</select>

<select id="checkJoinRoomList" parameterType="java.lang.String" resultType="java.lang.Integer">
SELECT COUNT(*) AS COUNT   
FROM MM_KICKOUT KICKOUT RIGHT JOIN MM_APPLY APPLY
ON KICKOUT.MM_APPLY_CODE = APPLY.MM_APPLY_CODE
JOIN MM_OPEN OPEN
ON OPEN.MM_OPEN_CODE = APPLY.MM_OPEN_CODE
WHERE APPLY.U_CODE= #{user_code}
AND OPEN.VISIT_DATE > SYSDATE
AND APPLY.MM_APPLY_CODE NOT IN(
                    SELECT KICKOUT.MM_APPLY_CODE
                    FROM MM_KICKOUT KICKOUT
					)
</select>


<select id="checkOpenRoomList"  parameterType="java.lang.String" resultType="java.lang.Integer">
SELECT COUNT(*) AS COUNT
FROM MM_OPEN OPEN LEFT JOIN MM_CHECK C
ON OPEN.MM_OPEN_CODE = C.MM_OPEN_CODE
LEFT JOIN MM_CHECK_TYPE CT
ON C.MM_CT_CODE = CT.MM_CT_CODE
JOIN REST
ON OPEN.REST_CODE = REST.REST_CODE
WHERE OPEN.U_CODE = #{user_code}
AND OPEN.VISIT_DATE > SYSDATE
AND OPEN.MM_OPEN_CODE NOT IN(SELECT MM_OPEN_CODE
                             FROM MM_CHECK C LEFT JOIN MM_CHECK_TYPE CT
                             ON C.MM_CT_CODE = CT.MM_CT_CODE
                             WHERE CT.CHECK_TYPE='삭제'
                             AND C.MM_OPEN_CODE = OPEN.MM_OPEN_CODE
							)
</select>


<select id="getJoinRoomList"  parameterType="java.lang.String" resultType="com.kkini.dto.MemaDTO">
SELECT ROOM_STATUS AS "roomStatus", VISIT_DATE AS "visitDate", "REST_NAME" AS "restName"
FROM USER_MM_APPLY_VIEW
WHERE U_CODE =#{user_code}
</select>

<select id="getOpenRoomList" parameterType="java.lang.String" resultType="com.kkini.dto.MemaDTO">
SELECT OPEN_CODE AS "openCode"
      , VISIT_DATE AS "visitDate"
      , REST_NAME AS "restName"
      , DEADLINE AS "deadline"
FROM USER_MM_OPEN_VIEW
WHERE OPEN_USER_CODE = #{user_code}
</select>


</mapper>